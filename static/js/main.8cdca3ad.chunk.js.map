{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["searchquery","Component","React","render","ReactDOM","LOAD_STATE","SUCCESS","ERROR","LOADING","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","starImage","id","e","undefined","state","fav","setState","objectSpread","defineProperty","console","log","checkStar","favImage","star","checkFav","submitSearch","event","preventDefault","document","getElementById","value","updated","fetchPhotos","red","photos","totalPhotos","perPage","currentPage","count","loadState","page","baseUrl","_this2","self","options","params","client_id","appId","per_page","query","axios","get","then","response","data","parseInt","headers","catch","results","react_default","a","createElement","className","type","placeholder","href","onClick","App_Pagination","current","total","onPageChanged","bind","App_List","ListItem","_this3","btn_class","photo","key","src","urls","small","alt","user","profile_image","portfolio_url","target","name","aria-hidden","List","_ref","items","map","App_ListItem","Pagination","pages","i","rangeStart","rangeEnd","push","start","pageRange","end","totalPages","Math","ceil","_this4","hasPrev","changePage","prevPage","hasFirst","index","hasLast","hasNext","nextPage","defaultProps","App_App","Boolean","window","location","hostname","match","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cdca3ad.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n  \nimport './App.css';\n\nconst { Component } = React;\nconst { render } = ReactDOM;\nvar searchquery;\n\nconst LOAD_STATE = {\n  SUCCESS: 'SUCCESS',\n  ERROR: 'ERROR',\n  LOADING: 'LOADING'\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      red:true,\n      fav:{},\n      star:{},\n      photos: [],\n      totalPhotos: 0,\n      perPage: 5,\n      currentPage: 1,\n      count:0,\n      updated:false,\n      loadState: LOAD_STATE.LOADING\n    }\n  }\n  starImage=(id, e)=>\n  {\n    if(this.state.fav[id]==undefined)\n      {\n        this.state.fav[id]=false;\n      }\n    this.setState({\n        fav : { ...this.state.fav,[id]: !this.state.fav[id]}\n        \n      });\n    console.log(id,this.state.fav[id]);\n  }\n  checkStar=(id)=>\n  {\n    return this.state.fav[id];\n  }\n  favImage=(id, e)=>\n  {\n    if(this.state.star[id]==undefined)\n      {\n        this.state.star[id]=0;\n      }\n    this.setState({\n        star : { ...this.state.star,[id]: this.state.star[id] +1}\n        \n      });\n    console.log(id,this.state.star[id]);\n  }\n  checkFav=(id)=>\n  {\n    return this.state.star[id];\n  }\n  \n  componentDidMount() {\n    this.fetchPhotos(this.state.currentPage);\n  }\n  \n  fetchPhotos(page) {\n    var self = this;\n    const { perPage } = this.state;\n    const { appId } = this.props;\n    var baseUrl;\n    const options = {\n      params: {\n        client_id: appId,\n        page: page,\n        per_page: perPage,\n        query:searchquery\n      }\n    };\n    \n    this.setState({ loadState: LOAD_STATE.LOADING });\n    if(this.state.updated==false){\n    baseUrl='https://api.unsplash.com/photos/curated'\n    axios.get(baseUrl, options)\n      .then((response) => {\n        self.setState({\n          photos: response.data,\n          totalPhotos: parseInt(response.headers['x-total']),\n          currentPage: page,\n          loadState: LOAD_STATE.SUCCESS\n        });\n      })\n      .catch(() => {\n        this.setState({ loadState: LOAD_STATE.ERROR });\n      });\n    }\n    else{\n    baseUrl='https://api.unsplash.com/search/photos'\n    axios.get(baseUrl, options)\n      .then((response) => {\n        self.setState({\n          photos: response.data.results,\n          totalPhotos: parseInt(response.headers['x-total']),\n          currentPage: page,\n          loadState: LOAD_STATE.SUCCESS\n        });\n      })\n      .catch(() => {\n        this.setState({ loadState: LOAD_STATE.ERROR });\n      });}\n  }\n  \n  submitSearch = (event) => {\n         event.preventDefault();\n         searchquery=document.getElementById(\"box\").value;\n         if(searchquery)\n           this.state.updated=true;\n          else\n            {\n            this.state.updated=false;\n            }\n         console.log('Button was clicked!')\n         this.fetchPhotos(1);\n  }\n   // changeColor= (event) => {\n   //     this.setState({red: !this.state.red})\n   \n  render() {\n    // let btn_class = this.props.checkStar(this.props.photo.id) ? \"redButton\" : \"greenButton\";\n\n    const {baseUrl} = this.state\n    return (\n      <div className=\"app\">\n        <div className=\"search\">\n      <form className=\"search1\"> \n        <input type=\"text\" placeholder=\" search..\" id=\"box\"></input>\n        <a href=\"#\"><button  className=\"button1\" placeholder=\"search\" onClick={this.submitSearch}>&#128269;</button></a></form>\n        </div>\n        <Pagination\n          current={this.state.currentPage}\n          total={this.state.totalPhotos} \n          perPage={this.state.perPage} \n          onPageChanged={this.fetchPhotos.bind(this)}\n        />\n        {this.state.loadState === LOAD_STATE.LOADING\n            ? <div className=\"loader\"></div>\n            : <List data={this.state.photos}  starImage={this.starImage} checkStar={this.checkStar} favImage={this.favImage} checkFav={this.checkFav}/>  \n          }\n        \n      </div>\n    )\n  }\n}\n\n// const ListItem = ({ photo }) => {\n  \n//   return (\n//     <div key={photo.id} className=\"grid__item card\">\n//       <div className=\"card__body\">\n//         <img src={photo.urls.small} alt=\"\" />\n//       </div>\n//       <div className=\"card__footer media\">\n//         <img src={photo.user.profile_image.small} alt=\"\" className=\"media__obj\" />\n//         <div className=\"media__body\">\n          \n//           <a href={photo.user.portfolio_url} target=\"_blank\">{ photo.user.name }</a>\n//           <button className={btn_class} onClick={this.changeColor.bind(this)}>\n//                   Button\n//              </button>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\nclass ListItem extends React.Component\n{\n   constructor(props){\n        super(props);\n\n     //    this.state = {\n     //       red: true\n     //    }\n     // this.changeColor = this.changeColor.bind(this)\n    }\n\n    // changeColor(){\n    //    this.setState({red: !this.state.red})\n    // }\n\n    render(){\n        let btn_class = this.props.checkStar(this.props.photo.id) ? \"redButton\" : \"greenButton\";\n// let like = this.props.checkFav(this.props.photo.id);\n\n  return (\n    <div key={this.props.photo.id} className=\"grid__item card\">\n      <div className=\"card__body\">\n        <img src={this.props.photo.urls.small} alt=\"\" />\n      </div>\n      <div className=\"card__footer media\">\n        <img src={this.props.photo.user.profile_image.small} alt=\"\" className=\"media__obj\" />\n        <div className=\"media__body\">\n          \n          <a href={this.props.photo.user.portfolio_url} target=\"_blank\">{ this.props.photo.user.name }</a>\n         <div className=\"data1\">\n           <i className=\"fa fa-thumbs-up like\" aria-hidden=\"true\"  onClick={ (e) =>{this.props.favImage(this.props.photo.id,e)} }>\n          </i>\n        <text className=\"l\" >{this.props.checkFav(this.props.photo.id)}</text>\n          <button className={btn_class} id=\"favbutton\" onClick={(e)=>{this.props.starImage(this.props.photo.id,e)}}>\n                  &#9734;\n             </button>\n          </div> \n        </div>\n      </div>\n    </div>\n  )\n      console.log(this.props.checkFav(this.props.photo.id));\n}\n}\nconst List = ({ data , starImage , checkStar, favImage, checkFav}) => {\n  var items = data.map(photo => <ListItem key={photo.id} photo={photo} starImage={starImage} checkStar={checkStar} favImage={favImage} checkFav={checkFav}/>);\n  return (\n    <div className=\"grid\">\n      { items }\n    </div>\n  )\n}\n\nclass Pagination extends Component {  \n  pages() {\n    var pages = [];\n    for(var i = this.rangeStart(); i <= this.rangeEnd(); i++) {\n      pages.push(i)\n    };\n    return pages;\n  }\n\n  rangeStart() {\n    var start = this.props.current - this.props.pageRange;\n    return (start > 0) ? start : 1\n  }\n\n  rangeEnd() {\n    var end = this.props.current + this.props.pageRange;\n    var totalPages = this.totalPages();\n    return (end < totalPages) ? end : totalPages;\n  }\n\n  totalPages() {\n    return Math.ceil(this.props.total / this.props.perPage);\n  }\n\n  nextPage() {\n    return this.props.current + 1;\n  }\n\n  prevPage() {\n    return this.props.current - 1;\n  }\n  \n  hasFirst() {\n    return this.rangeStart() !== 1\n  }\n\n  hasLast() {\n    return this.rangeEnd() < this.totalPages();\n  }\n\n  hasPrev() {\n    return this.props.current > 1;\n  }\n\n  hasNext() {\n    return this.props.current < this.totalPages();\n  }\n\n  changePage(page) {\n    this.props.onPageChanged(page);\n  }\n\n  render() {\n    return (\n      <div className=\"pagination\">\n        <div className=\"pagination__left\">\n          <a href=\"#\" className={!this.hasPrev() ? 'hidden': ''}\n            onClick={e => this.changePage(this.prevPage())}\n          >Prev</a>\n        </div>\n\n        <div className=\"pagination__mid\">\n          <ul>\n            <li className={!this.hasFirst() ? 'hidden' : ''}>\n              <a href=\"#\" onClick={e => this.changePage(1)}>1</a>\n            </li>\n            <li className={!this.hasFirst() ? 'hidden' : ''}>...</li>\n            {\n              this.pages().map((page, index) => {\n                return (\n                  <li key={index}>\n                    <a href=\"#\"\n                      onClick={e => this.changePage(page)}\n                      className={ this.props.current == page ? 'current' : '' }\n                    >{ page }</a>\n                  </li>\n                );\n              })\n            }\n            <li className={!this.hasLast() ? 'hidden' : ''}>...</li>\n            <li className={!this.hasLast() ? 'hidden' : ''}>\n              <a href=\"#\" onClick={e => this.changePage(this.totalPages())}>{ this.totalPages() }</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"pagination__right\">\n          <a href=\"#\" className={!this.hasNext() ? 'hidden' : ''}\n            onClick={e => this.changePage(this.nextPage())}\n          >Next</a>\n        </div>\n      </div>\n    );    \n  }\n};\n\nPagination.defaultProps = {\n  pageRange: 2\n}\n\nrender(\n  <App\n    appId={\"8cb0835345f7baa65a5468336340cc2f011a4959f281a5aeec631172252fd784\"}\n    baseUrl={'https://api.unsplash.com/photos/curated'}\n\n  />,\n  document.getElementById('mount-point') \n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}